cmake_minimum_required(VERSION 3.26 FATAL_ERROR)
set(name SavannaCore)

CONFIG_INPUT_HEADER(${name})

set(core_libs "")
set(core_include_dirs "")
set(external_libs "")
set(external_include_dirs "")

# Turn on the ability to create folders to organize projects (.vcproj)
# It creates "CMakePredefinedTargets" folder by default and adds CMake
# defined projects like INSTALL.vcproj and ZERO_CHECK.vcproj
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

# Find all source files and subdirectories in the current directory
function(COLLECT_SRC_RECURSIVE)
    # Acquire all source files in this directory, This is evil for the record)
    file(GLOB_RECURSE src
        ${CMAKE_CURRENT_LIST_DIR}/*.cpp
        ${CMAKE_CURRENT_LIST_DIR}/*.cc
        ${CMAKE_CURRENT_LIST_DIR}/*.c
        ${CMAKE_CURRENT_LIST_DIR}/*.h
        ${CMAKE_CURRENT_LIST_DIR}/*.hpp)

    SUBDIRLIST(subdirs ${CMAKE_CURRENT_LIST_DIR} ${CMAKE_CURRENT_LIST_DIR})
    foreach (subdir IN ITEMS ${subdirs})
        if (${subdir} STREQUAL ${CMAKE_CURRENT_LIST_DIR})
            continue()
        endif()
        # Check if the subdirectory contains a ~ in it's path
        if (${subdir} MATCHES "~")
            list(FILTER src EXCLUDE REGEX ${subdir})
            continue()
        endif()
        # Check if the subdirectory has a CMakeLists.txt file
        file(GLOB CMakeLists ${subdir}/CMakeLists.txt)
        if (CMakeLists)
            # Add the subdirectory
            add_subdirectory(${subdir})
            # Filter out the subdirectory from the source list
            list(FILTER src EXCLUDE REGEX ${subdir})
        endif()
    endforeach()
endfunction()
