cmake_minimum_required(VERSION 3.10 FATAL_ERROR)

# Include all modules
file(GLOB_RECURSE modules ${PROJECT_SOURCE_DIR}/Buildscripts/CMake/Modules/*.cmake)
foreach(module ${modules})
    include("${module}")
endforeach()

# Turn on the ability to create folders to organize projects (.vcproj)
# It creates "CMakePredefinedTargets" folder by default and adds CMake
# defined projects like INSTALL.vcproj and ZERO_CHECK.vcproj
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

# Acquire all subdirectories, This is evil for the record)
file(GLOB_RECURSE src
    ${CMAKE_CURRENT_LIST_DIR}/*.cpp
    ${CMAKE_CURRENT_LIST_DIR}/*.c
    ${CMAKE_CURRENT_LIST_DIR}/*.h
    ${CMAKE_CURRENT_LIST_DIR}/*.hpp)

# Filter any directory that contains a '~' in it's path.
list(FILTER src EXCLUDE REGEX "${CMAKE_CURRENT_LIST_DIR}/(.+)~(.+)")

# set(FMT_ROOT_DIR ${PROJECT_SOURCE_DIR}/../External/fmt-8.1.1/fmt-8.1.1)
# set(FMT_BIN_DIR ${PROJECT_SOURCE_DIR}/../External/bin/fmt-8.1.1)
# set(FMT_SUB_DIR ${FMT_ROOT_DIR} ${FMT_BIN_DIR})

# add_subdirectory(${FMT_SUB_DIR})
	# ${PROJECT_SOURCE_DIR}/../External/glm-0.9.9.8/glm
	# ${PROJECT_SOURCE_DIR}/../External/bin/glm)

# set(EXTERNAL_INCLUDE_DIRS
#     ${FMT_ROOT_DIR}/include)

# Sort the files into Filters based on Folder Hierarchy
SOURCE_GROUP_BY_FOLDER()

# Add Library
add_library(Core STATIC ${src})
target_include_directories(Core PUBLIC ${CMAKE_CURRENT_LIST_DIR}
    ${EXTERNAL_INCLUDE_DIRS})

# Install Binaries in Build Folder
install(TARGETS Core
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib)
